package paes.test.c2;

public class GeneralTestC2 {
    public static void main(String[] args) {
        int n = 9, minValue = 0;
        String result = "";

        double[][] inputValues = {
                {0.684, 0.682, 0.652, 0.600},{0.797, 0.659, 0.812, 0.720},
                {0.759, 0.659, 0.652, 0.600},{0.633, 0.773, 0.232, 0.160},
                {0.684, 0.773, 0.217, 0.160},{0.772, 0.659, 0.681, 0.560},
                {1.000, 0.864, 0.928, 0.800},{0.797, 0.614, 0.710, 0.720},
                {0.557, 0.727, 0.188, 0.080},{0.886, 0.727, 0.681, 0.560},
                {0.797, 0.750, 0.681, 0.640},{0.810, 0.614, 0.768, 0.760},
                {0.696, 0.545, 0.551, 0.440},{0.633, 0.773, 0.217, 0.080},
                {0.848, 0.705, 0.638, 0.560},{0.734, 0.591, 0.580, 0.480},
                {0.759, 0.682, 0.696, 0.720},{0.557, 0.682, 0.188, 0.080},
                {0.620, 0.568, 0.652, 0.680},{0.582, 0.773, 0.203, 0.120},
                {0.848, 0.750, 0.826, 0.840},{0.835, 0.659, 0.667, 0.520},
                {0.722, 1.000, 0.217, 0.160},{0.797, 0.568, 0.710, 0.600},
                {0.646, 0.795, 0.203, 0.080},{0.823, 0.682, 0.754, 0.800},
                {0.646, 0.841, 0.217, 0.160},{0.734, 0.614, 0.739, 0.760},
                {0.810, 0.727, 0.768, 0.920},{0.557, 0.659, 0.203, 0.080}};

        double[] hli1 = new double[n];
        double[] hlo1 = new double[n];

        double[] hli2 = new double[n];
        double[] hlo2 = new double[n];

        double[] eli = new double[3];
        double[] elo = new double[3];

        double[][] wl1 = {{-17.271339333406793, 18.358730112695547, -40.06888448340136, 31.972830046080645, 0.4985755084479891, 24.916123471315696, 26.808523602499054, 34.090500879843866, 23.39474189925818},
            {-68.53983975660576, 15.249494671865158, -102.31385249741996, 66.47066756957464, -6.448413291110173, 22.972069483262587, 26.451289101403958, 72.03744321899397, 50.187261903178246},
            {56.33707403963089, 14.89737764106028, 84.17858904495921, -59.39009554025626, 17.892581038798063, 22.674794257069085, 16.64852366782374, -64.5264750813853, -45.819794957729975},
            {42.78673402461823, 21.613224614576083, 59.79871715897293, -43.259204119943675, 15.675164763314495, 11.31858517855384, -0.400684736757325, -44.97258029569771, -34.541768530435064}};

        double[][] wl2 = {{63.06592876238614, -3.4822153866219683, 101.31704162818673, -75.85446257894492, 21.589741398079155, -15.945705248769245, -11.295078028142411, -80.9445470156934, -61.43589035759217},
            {9.227409918180822, 2.6740873076420986, 0.06133008796267831, 3.190080726072332, 15.690106260992335, 7.763715107610201, 19.66249161550615, 8.877022421766105, 21.48162793131806},
            {18.618693117810825, 1.2511742366231764, 9.956483073966162, 5.922282207399932, 7.5800289915081915, 18.33647573634696, 2.2269023360865643, 15.504825535456268, 19.04166571893912},
            {14.588558906732374, 12.248931377289956, 1.450279531529009, 0.08632540377186579, 11.673587649217772, 6.25052394264045, 5.178293226202156, 11.365247079435667, 6.273275354601882},
            {8.733122521257519, 11.570309342684263, 6.394420845127509, 10.676044996369765, 5.6935095564751235, 9.383379520788417, 7.192456272436497, 10.104581429578822, 19.98368616944113},
            {-8.687834420372662, -4.567012068831223, -16.700906551182808, 15.417956897812788, -16.424375074252083, -12.095840903073555, -8.560314827804797, 18.696178990030663, 10.585954422880745},
            {51.84672724997565, 22.885561149957017, 76.62345570335178, -26.696469733672274, 23.375694242303037, 19.906106781030473, 7.26400816337466, -30.48681823600086, -16.21935962605489},
            {5.755639746069288, 16.070291177595, 7.551415917547426, 8.337310668766426, 7.125027017462087, 13.21328445361415, 13.329012592345752, 5.202378429310554, 13.017765261647291},
            {-1.982604413436957, 3.1051411069076087, -0.4927036734045152, 20.216670990313897, 14.62189520600395, 10.44277950697603, 8.145252232959342, 13.66032892165101, 7.5746962429240945}};

        double[][] wl3 = {{109.107317429683, -22.568573164809404, -20.546688886344636, -13.367925524114955, -18.857444541770416, -23.109206494041224, 6.441971376529907, -18.606326511294473, -18.924146240528756},
            {-93.55902778150377, 1.38714420434051, -0.2455892682636864, -0.2861681037972667, -8.216297273894655, -26.545898538350333, 94.6778155723772, -0.38393104264170913, 3.944920674037732},
            {-97.33815824953763, 8.791030194385362, 1.3633940185359024, -6.3922785666919255, 4.608972591819208, 17.958333929696092, -97.20587435759043, 6.880958419203413, 13.974150422110942}};

        while(minValue <= 29) {
            for (int i = 0; i < hli1.length; i++) {
                hli1[i] = 0;
                hlo1[i] = 0;
            }

            for (int i = 0; i < hli2.length; i++) {
                hli2[i] = 0;
                hlo2[i] = 0;
            }

            for (int i = 0; i < eli.length; i++) {
                eli[i] = 0;
                elo[i] = 0;
            }

            hli1 = ponderationL1(n, inputValues, minValue, hli1, wl1);
            hlo1 = activationFunctionL1(hlo1, hli1);

            hli2 = ponderationL2(hli2, wl2, hlo1);
            hlo2 = activationFunctionL2(hlo2, hli2);

            eli = ponderationL3(eli, wl3, hlo2);
            elo = activationFunctionL3(elo, eli);

            for (int i = 0; i < elo.length; i++) {
                result += Math.round(elo[i]) + " ";
            }

            if (result.equals("0 0 1 ")) System.out.println(result + " Iris-Setosa");
            else if (result.equals("0 1 0 ")) System.out.println(result + " Iris-Versicolor");
            else if (result.equals("1 0 0 ")) System.out.println(result + " Iris-Virginica");
            else System.out.println(result + " Unindentified-Species-Detected!");

            minValue++;
            result = "";

        }
    }

    public static double[] ponderationL1(int n, double[][] inputValues, int minValue, double[] hli1, double[][] wl1) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < inputValues[i].length; j++) {
                hli1[i] += inputValues[minValue][j] * wl1[j][i];
            }
        }
        return hli1;
    }

    public static double[] activationFunctionL1(double[] hlo1, double[] hli1) {
        for (int i = 0; i < hlo1.length; i++) {
            hlo1[i] = 1/(1 + Math.exp(-hli1[i]));
        }
        return hlo1;
    }

    public static double[] ponderationL2(double[] hli2, double[][] wl2, double[] hlo1) {
        for (int i = 0; i < wl2.length; i++) {
            for (int j = 0; j < wl2[i].length; j++) {
                hli2[i] += wl2[i][j] * hlo1[j];
            }
        }
        return hli2;
    }

    public static double[] activationFunctionL2(double[] hlo2, double[] hli2) {
        for (int i = 0; i < hlo2.length; i++) {
            hlo2[i] = 1/(1 + Math.exp(-hli2[i]));
        }
        return hlo2;
    }

    public static double[] ponderationL3(double[] eli, double[][] wl3, double[] hlo2) {
        for (int i = 0; i < wl3.length; i++) {
            for (int j = 0; j < wl3[i].length; j++) {
                eli[i] += wl3[i][j] * hlo2[j];
            }
        }
        return eli;
    }

    public static double[] activationFunctionL3(double[] elo, double[] eli) {
        for (int i = 0; i < elo.length; i++) {
            elo[i] = 1/(1 + Math.exp(-eli[i]));
        }
        return elo;
    }
}